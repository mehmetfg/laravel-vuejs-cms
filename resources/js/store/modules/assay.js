import axios from "axios";const state={    assays:[],    assay:{},};const getters={    assays(state){        return state.assays    },    assay(state){        return state.assay    },};const mutations={    initAssays(state, assay){        state.assays=assay;    },    initAssay(state, assay){        state.assay=assay;    },    addAssay(state, assay){        state.assays.push(assay);    },    updateAssay(state, assay){        let index=state.assays.findIndex(c=> c.id==assay.id);        if(index>-1){            state.assays[index]=assay;        }    },    deleteAssay(state, assayID){        let index=state.assays.findIndex(c=> c.id==assayID)        if(index>-1){            state.assays.splice(index, 1)        }    }};const  actions={    initAssays(context, payload){        axios.get('/backend/assays/'+payload).then(response=> {            context.commit('initAssays', response.data.model)        })    },    initAssay(context, assayId){        axios.get('/backend/assay/'+assayId).then(response=> {            context.commit('initAssay', response.data.model)        })    },    addAssay(context, assay){        axios.post("/backend/assay", assay).then(response=> {            if(response.data.type=="success") {                context.commit('addAssay', {id: response.data.id, ...assay});            }            swal({                position: 'center',                type: response.data.type,                title: response.data.title,                text: response.data.message,                showConfirmButton: false,                timer: 1500            });         })    },    updateAssay(context, assay){        axios.put('/backend/assay/'+assay.id, assay).then(response=> {            if(response.data.type=="success") {                context.commit('updateAssay', assay);            }            swal({                position: 'center',                type: response.data.type,                title: response.data.title,                text: response.data.message,                showConfirmButton: false,                timer: 1500            });         })    },    isActiveSetter(context, assay){        axios.put("/backend/assay/isActiveSetter/"+assay.id, assay).then(response=> {            swal({                position: 'center',                type: response.data.type,                title: response.data.title,                text: response.data.message,                showConfirmButton: false,                timer: 1500            });         })    },    deleteAssay(context, assayID){        swal({            title: "SİLME İŞLEMİ",            text: "<b>Silmek İstediğinizden Eminmisiniz!?</b>",            type: 'warning',            showCancelButton: true,            confirmButtonColor: '#3085d6',            cancelButtonColor: '#d33',            confirmButtonText: "Kabul Ediyorum",        }).then((result) => {            if (result.value) {                axios.delete('/backend/assay/'+ assayID).then(response=> {                    if(response.data.type=="success") {                        context.commit('deleteAssay', assayID)                    }                    swal({                        position: 'center',                        type: response.data.type,                        title: response.data.title,                        text: response.data.message,                        showConfirmButton: false,                        timer: 1500                    });                 })            }        })    }};export default {    state,    mutations,    actions,    getters}